TIDY(1)                             5.3.12                             TIDY(1)



NNAAMMEE
       ttiiddyy - check, correct, and pretty-print HTML(5) files

SSYYNNOOPPSSIISS
       ttiiddyy [_o_p_t_i_o_n_s] [_f_i_l_e ...] [_o_p_t_i_o_n_s] [_f_i_l_e ...] ...

DDEESSCCRRIIPPTTIIOONN
       Tidy reads HTML, XHTML, and XML files and writes cleaned-up markup.
       For HTML variants, it detects, reports, and corrects many common coding
       errors and strives to produce visually equivalent markup that is both
       conformant to the HTML specifications and that works in most browsers.

       A common use of Tidy is to convert plain HTML to XHTML.  For generic
       XML files, Tidy is limited to correcting basic well-formedness errors
       and pretty printing.

       If no input file is specified, Tidy reads the standard input.  If no
       output file is specified, Tidy writes the tidied markup to the standard
       output.  If no error file is specified, Tidy writes messages to the
       standard error.

OOPPTTIIOONNSS
       Tidy supports two different kinds of options.  Regular (or "standard")
       command-line options start with a single dash '--'.  They are listed in
       the first part of this section.  Detailed (or "expanded") options for
       configuring the behavior of Tidy can be passed either on the command
       line, starting with two dashes ----, or specified in a configuration
       file, without the starting dashes.  They are listed in the second part
       of this section.

       Single-letter "standard" options without an associated value can be
       combined; for example '--ii', '--mm' and '--uu' may be combined as '--iimmuu'.

       For command line options that expect a numerical argument, a default is
       assumed if no meaningful value can be found.

   FFiillee mmaanniippuullaattiioonn
       --oouuttppuutt <<%%ss>>, --oo <<%%ss>>
              write output to the specified <file> (_o_u_t_p_u_t_-_f_i_l_e_: _<_%_s_>)

       --ccoonnffiigg <<%%ss>>
              set configuration options from the specified <file>


       --ffiillee <<%%ss>>, --ff <<%%ss>>
              write errors and warnings to the specified <file> (_e_r_r_o_r_-_f_i_l_e_:
              _<_%_s_>)

       --mmooddiiffyy, --mm
              modify the original input files (_w_r_i_t_e_-_b_a_c_k_: _y_e_s)

   PPrroocceessssiinngg ddiirreeccttiivveess
       --iinnddeenntt, --ii
              indent element content (_i_n_d_e_n_t_: _a_u_t_o)

       --wwrraapp <<%%ss>>, --ww <<%%ss>>
              wrap text at the specified <column>. 0 is assumed if <column> is
              missing. When this option is omitted, the default of the
              configuration option 'wrap' applies.  (_w_r_a_p_: _<_%_s_>)

       --uuppppeerr, --uu
              force tags to upper case (_u_p_p_e_r_c_a_s_e_-_t_a_g_s_: _y_e_s)

       --cclleeaann, --cc
              replace FONT, NOBR and CENTER tags with CSS (_c_l_e_a_n_: _y_e_s)

       --bbaarree, --bb
              strip out smart quotes and em dashes, etc.  (_b_a_r_e_: _y_e_s)

       --ggddoocc, --gg
              produce clean version of html exported by Google Docs (_g_d_o_c_:
              _y_e_s)

       --nnuummeerriicc, --nn
              output numeric rather than named entities (_n_u_m_e_r_i_c_-_e_n_t_i_t_i_e_s_:
              _y_e_s)

       --eerrrroorrss, --ee
              show only errors and warnings (_m_a_r_k_u_p_: _n_o)

       --qquuiieett, --qq
              suppress nonessential output (_q_u_i_e_t_: _y_e_s)

       --oommiitt  omit optional start tags and end tags (_o_m_i_t_-_o_p_t_i_o_n_a_l_-_t_a_g_s_: _y_e_s)

       --xxmmll   specify the input is well formed XML (_i_n_p_u_t_-_x_m_l_: _y_e_s)

       --aassxxmmll, --aassxxhhttmmll
              convert HTML to well formed XHTML (_o_u_t_p_u_t_-_x_h_t_m_l_: _y_e_s)

       --aasshhttmmll
              force XHTML to well formed HTML (_o_u_t_p_u_t_-_h_t_m_l_: _y_e_s)

       --aacccceessss <<%%ss>>
              do additional accessibility checks (<level> = 0, 1, 2, 3). 0 is
              assumed if <level> is missing.  (_a_c_c_e_s_s_i_b_i_l_i_t_y_-_c_h_e_c_k_: _<_%_s_>)

   CChhaarraacctteerr eennccooddiinnggss
       --rraaww   output values above 127 without conversion to entities


       --aasscciiii use ISO-8859-1 for input, US-ASCII for output


       --llaattiinn00
              use ISO-8859-15 for input, US-ASCII for output


       --llaattiinn11
              use ISO-8859-1 for both input and output


       --iissoo22002222
              use ISO-2022 for both input and output


       --uuttff88  use UTF-8 for both input and output


       --mmaacc   use MacRoman for input, US-ASCII for output


       --wwiinn11225522
              use Windows-1252 for input, US-ASCII for output


       --iibbmm885588
              use IBM-858 (CP850+Euro) for input, US-ASCII for output


       --uuttff1166llee
              use UTF-16LE for both input and output


       --uuttff1166bbee
              use UTF-16BE for both input and output


       --uuttff1166 use UTF-16 for both input and output


       --bbiigg55  use Big5 for both input and output


       --sshhiiffttjjiiss
              use Shift_JIS for both input and output


   MMiisscceellllaanneeoouuss
       --vveerrssiioonn, --vv
              show the version of Tidy


       --hheellpp, --hh, --??
              list the command line options


       --hheellpp--ccoonnffiigg
              list all configuration options


       --sshhooww--ccoonnffiigg
              list the current configuration settings


       --hheellpp--ooppttiioonn <<%%ss>>
              show a description of the <option>


       --llaanngguuaaggee <<%%ss>>
              set Tidy's output language to <lang>. Specify '-language help'
              for more help. Use before output-causing arguments to ensure the
              language takes effect, e.g.,`tidy -lang es -lang help`.
              (_l_a_n_g_u_a_g_e_: _<_%_s_>)

   XXMMLL
       --xxmmll--hheellpp
              list the command line options in XML format


       --xxmmll--ccoonnffiigg
              list all configuration options in XML format


       --xxmmll--ssttrriinnggss
              output all of Tidy's strings in XML format


       --xxmmll--eerrrroorr--ssttrriinnggss
              output error constants and strings in XML format


       --xxmmll--ooppttiioonnss--ssttrriinnggss
              output option descriptions in XML format


       DDeettaaiilleedd ((ii..ee.. ""eexxppaannddeedd"")) OOppttiioonnss can be specified by preceding each
       option with ---- at the command line, followed by its desired value, OR
       by placing the options and values in a configuration file, and telling
       tidy to read that file with the --ccoonnffiigg standard option:

          ttiiddyy ----_o_p_t_i_o_n_1 value1 ----_o_p_t_i_o_n_2 value2 [standard options ...]
          ttiiddyy --ccoonnffiigg _c_o_n_f_i_g_-_f_i_l_e [standard options ...]

       Detailed configuration options can be conveniently grouped in a single
       config file.  A Tidy configuration file is simply a text file, where
       each option is listed on a separate line in the form

          ooppttiioonn11: _v_a_l_u_e_1
          ooppttiioonn22: _v_a_l_u_e_2
          etc.

UUSSAAGGEE
       Input/Output default to stdin/stdout respectively.

EENNVVIIRROONNMMEENNTT
       HHTTMMLL__TTIIDDYY
              Name of the default configuration file.  This should be an
              absolute path, since you will probably invoke ttiiddyy from
              different directories.  The value of HTML_TIDY will be parsed
              after the compiled-in default (defined with -DTIDY_CONFIG_FILE),
              but before any of the files specified using --ccoonnffiigg.

EEXXIITT SSTTAATTUUSS
       0      All input files were processed successfully.

       1      There were warnings.

       2      There were errors.


SSEEEE AALLSSOO
       For more information about HTML Tidy:

           http://www.html-tidy.org/

       For more information on HTML:

           HHTTMMLL:: EEddiittiioonn ffoorr WWeebb AAuutthhoorrss (the latest HTML specification)
           http://dev.w3.org/html5/spec-author-view

           HHTTMMLL:: TThhee MMaarrkkuupp LLaanngguuaaggee (an HTML language reference)
           http://dev.w3.org/html5/markup/

       For bug reports and comments:

           https://github.com/htacg/tidy-html5/issues/

       Or send questions and comments to ppuubblliicc--hhttaaccgg@@ww33..oorrgg.

       Validate your HTML documents using the WW33CC NNuu MMaarrkkuupp VVaalliiddaattoorr:

           http://validator.w3.org/nu/

AAUUTTHHOORR
       TTiiddyy was written by DDaavvee RRaaggggeetttt <dsr@w3.org>, and subsequently
       maintained by a team at http://tidy.sourceforge.net/, and now
       maintained by HHTTAACCGG (http://www.htacg.org).

       The sources for HHTTMMLL TTiiddyy are available at
       https://github.com/htacg/tidy-html5/ under the MIT Licence.



HTML Tidy                           5.3.12                             TIDY(1)
